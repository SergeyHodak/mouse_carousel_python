# Варианты по перемещению курсора
import win32api  # библиотека для получения информакии о курсоре
import time  # для задержек


def option_1(position_on_x, position_on_y):  # Динамическое прямолинейное
    flag = 0  # флаг для цикла вайл
    a = 0; b = 0  # для различий, повлиял ли пользователь на курсор во время програмного движения по иксу и игрику
    while flag == 0:  # пока флаг равен нулю выполняем цикл
        x, y = win32api.GetCursorPos()  # получаем текущее положение курсора
        if x == position_on_x and y == position_on_y:  # если курсор уже где нужно
            flag += 1  # возвести флаг
        else:  # курсор нужно перемещать
            if x == int(a) and y == int(b):  # пользователь не двигает курсор во время програмного движения
                distance_on_x = position_on_x - x  # дистанция по иксу между сейчас и надо
                distance_on_y = position_on_y - y  # дистанция по игрику между сейчас и надо
                step = ((distance_on_x ** 2) + (distance_on_y ** 2)) ** (1 / 2)  # количество шагов, которыми нужно будет дойти к назначенным координатам
                a += distance_on_x / step  # сместить курсор на один шаг
                b += distance_on_y / step  # сместить курсор на один шаг
                win32api.SetCursorPos((int(a), int(b)))  # установить курсор
            else:  # двинул или начало движения
                a = x; b = y  # если повлиял, или это начало
        # time.sleep(0.001)  # задержка чтобы курсор не слишком быстро двигался


option_1(1, 1)  # поставить курсор в 1,1
option_1(500, 500)  # поставить курсор в 500,500
